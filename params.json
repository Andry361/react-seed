{"name":"React-seed","tagline":"Seed project for React apps using ES6 & webpack","body":"# React seed\r\n\r\nA boilerplate for building React apps with ES6 and webpack.\r\n\r\n## What you get\r\n\r\n* React 0.13\r\n* Compilation of ES6 & JSX to ES5\r\n* Jest testing framework\r\n* webpack bundling with react hot loader (as well as html, css & sass loaders)\r\n* Basic flux architecture with app actions, stores and example web API usage\r\n\r\n## Getting started\r\n\r\nClone the project and remove the git repository:\r\n\r\n```bash\r\ngit clone --depth=1 https://github.com/badsyntax/react-seed.git my-project\r\ncd my-project\r\nrm -rf .git && git init\r\n```\r\n\r\n## npm scripts\r\n\r\n* `npm start` - Build and start the app in dev mode at http://localhost:8000\r\n* `npm test` - Run the tests\r\n* `npm run build` - Run a production build\r\n\r\n## Examples\r\n\r\n### Writing components:\r\n\r\n```js\r\n// Filename: Menu.jsx\r\n\r\n'use strict';\r\n\r\nimport './_Menu.scss';\r\n\r\nimport React from 'react';\r\nimport MenuItem from '../MenuItem/MenuItem';\r\n\r\nlet { PropTypes } = React;\r\n\r\nclass Menu extends React.Component {\r\n\r\n  constructor(...args) {\r\n    super(...args);\r\n    // Set initial state\r\n    this.state = {\r\n      foo: false\r\n    };\r\n  }\r\n\r\n  getMenuItem(item) {\r\n    return (\r\n      <MenuItem item={item} key={'menu-item-' + item.id} />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className={'menu'}>\r\n        {this.props.items.map(this.getMenuItem, this)}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Menu;\r\n```\r\n\r\n### Using mixins:\r\n\r\nIt's a bit awkward to use mixins with ES6 classes. You'll need to use a mixin helper:\r\n\r\n```js\r\nimport mixin from 'util/mixin';\r\n\r\nlet draggable = {\r\n  drag() { /* … */ }\r\n};\r\n\r\nlet droppable = {\r\n  drop() { /* … */ }\r\n};\r\n\r\nclass Dialog extends mixin(React.Component, draggable, droppable) {\r\n  /* … */\r\n}\r\n```\r\n\r\nAlternatively, just use `React.createClass`.\r\n\r\n###Writing tests:\r\n\r\n```js\r\n// Filename: __tests__/Menu-test.js\r\n\r\n'use strict';\r\n\r\nimport React from 'react/addons';\r\n\r\njest.dontMock('../Menu.jsx');\r\njest.dontMock('../../MenuItem/MenuItem.jsx');\r\n\r\nimport Menu from '../Menu.jsx';\r\n\r\nlet { TestUtils } = React.addons;\r\n\r\ndescribe('Menu', () => {\r\n\r\n  let menuItems = [\r\n    { id: 1, label: 'Option 1' },\r\n    { id: 2, label: 'Option 2' }\r\n  ];\r\n\r\n  let menu = TestUtils.renderIntoDocument(\r\n    <Menu items={menuItems} />\r\n  );\r\n  let menuElem = React.findDOMNode(menu);\r\n\r\n  it('Renders the menu items', () => {\r\n    expect(menuElem.querySelectorAll('li').length).toEqual(2);\r\n  });\r\n});\r\n```\r\n\r\n## Sass, CSS & webpack\r\n\r\n`import` Sass and CSS files from within your JavaScript component files:\r\n\r\n```js\r\n// Filename: app.jsx\r\nimport 'normalize.css/normalize.css';\r\nimport './scss/app.scss';\r\n```\r\n\r\n* Sass include paths can be adjusted in the `webpack.config.js` file.\r\n* All CSS (compiled or otherwise) is run through Autoprefixer.\r\n* CSS files are combined in the order in which they are imported in JavaScript, thus\r\nyou should always import your CSS/Sass before importing any other JavaScript files.\r\n* Use an approach like [BEM](http://cssguidelin.es/#bem-like-naming) to avoid specificity\r\nissues that might exist due to unpredicatable order of CSS rules.\r\n\r\n## HTML files\r\n\r\nAll required `.html` files are compiled with lodash.template and synced into the `./build` directory:\r\n\r\n```js\r\n// Filename: app.jsx\r\nimport './index.html';\r\n```\r\n\r\n* You can adjust the lodash template data in the `webpack.config.js` file.\r\n\r\n## Conventions\r\n\r\n* Use fat arrows for anonymous functions\r\n* Don't use `var`. Use `let` and `const`.\r\n\r\n\r\n## Releasing\r\n\r\nUpdating version:\r\n\r\n* `npm version patch` - Bump version\r\n* `git push && git push --tags` - Push to remote\r\n\r\nPublishing package:\r\n\r\n* `npm login` - Login to npm\r\n* `npm publish` - Publish package\r\n\r\n## Credits\r\n\r\nThis project was initially forked from https://github.com/tcoopman/react-es6-browserify\r\n\r\n## License\r\n\r\nCopyright (c) 2015 Richard Willis\r\n\r\nMIT (http://opensource.org/licenses/MIT)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}